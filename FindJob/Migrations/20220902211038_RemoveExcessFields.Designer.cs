// <auto-generated />
using System;
using FindJob.Models.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FindJob.Migrations
{
    [DbContext(typeof(FjDbContext))]
    [Migration("20220902211038_RemoveExcessFields")]
    partial class RemoveExcessFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FindJob.Models.ViewModels.FjImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.FjResponses", b =>
                {
                    b.Property<Guid>("ResumeGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VacancyGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("FjResponsesTypes")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.HasKey("ResumeGuid", "VacancyGuid");

                    b.HasIndex("VacancyGuid");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.Resume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Expirience")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uuid");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.Property<double?>("Salary")
                        .HasColumnType("double precision");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.Vacancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("Expirience")
                        .HasColumnType("integer");

                    b.Property<string>("Info")
                        .HasColumnType("text");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.Property<double?>("Salary")
                        .HasColumnType("double precision");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.FjResponses", b =>
                {
                    b.HasOne("FindJob.Models.ViewModels.Resume", "Resume")
                        .WithMany("Responses")
                        .HasForeignKey("ResumeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindJob.Models.ViewModels.Vacancy", "Vacancy")
                        .WithMany("Responses")
                        .HasForeignKey("VacancyGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.Resume", b =>
                {
                    b.HasOne("FindJob.Models.ViewModels.FjImage", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.Resume", b =>
                {
                    b.Navigation("Responses");
                });

            modelBuilder.Entity("FindJob.Models.ViewModels.Vacancy", b =>
                {
                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
